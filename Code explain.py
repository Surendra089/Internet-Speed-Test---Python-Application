# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OaNv6lsNMAejPn7KlfqtUrHZkcezALY4

# **Code Breakdown**

**1. Importing Required Modules**
"""

from tkinter import *
import speedtest  # pip install speedtest-cli
import threading

"""*   **tkinter:** Standard Python library for creating GUI applications.
*   **speedtest:** Third-party library used for checking internet speed.

*   **threading:** Used to run the speed test in a separate thread to prevent the UI from freezing.

**2. Initializing the Tkinter Window**
"""

root = Tk()  # Main application window
root.title("Internet Speed Test")  # Title of the window
root.resizable(False, False)  # Disable window resizing
root.configure(bg="#141527")  # Set background color (dark theme)

"""*   **Tk()** initializes the main application window'
*   **.title()** sets the window title.

*   **.resizable(False, False)** ensures that the window size remains fixed.
*   **.configure(bg="#141527")** sets the background color.

**3. Setting Window Dimensions and Centering It**
"""

w = 450
h = 700
ws = root.winfo_screenwidth()
hs = root.winfo_screenheight()
x = (ws / 2) - (w / 2)
y = (hs / 2) - (h / 2)
root.geometry("%dx%d+%d+%d" % (w, h, x, y))  # Center the window

"""*   The window size is set to 450Ã—700 pixels.
*   winfo_screenwidth() and winfo_screenheight() fetch screen dimensions.

*   The window is centered using calculated coordinates.

**4. Speed Test Functionality**
"""

def Test():
    def run_speed_test():
        Download.config(text="Loading")  # Indicating the test is in progress

        test = speedtest.Speedtest()  # Create Speedtest object
        servernames = []
        test.get_servers(servernames)  # Fetch available servers
        data = test.get_config()  # Retrieve configuration data

        service_data = data["client"]["isp"]  # Get ISP name
        ip_data = data["client"]["ip"]  # Get public IP address

        uploading = round(test.upload() / (1024 * 1024), 2)  # Upload speed in Mbps
        downloading = round(test.download() / (1024 * 1024), 2)  # Download speed in Mbps

        # Update the UI with results
        ping.config(text=test.results.ping)
        upload.config(text=uploading)
        download.config(text=downloading)
        Download.config(text=downloading)
        service.config(text=service_data)
        ip.config(text=ip_data)
        root.update()

    # Run speed test in a separate thread to keep UI responsive
    threading.Thread(target=run_speed_test).start()

"""**How it Works:**



*   **speedtest.Speedtest()** initializes the speed test.
*   **.get_servers([]) **fetches the available servers.

*   **.get_config()** retrieves ISP and IP information.
*   **.upload()** and **.download()** measure upload and download speeds (converted to Mbps).

*   The UI is updated with the retrieved values.
*   A separate thread **(threading.Thread())** is used to prevent UI freezing while running the test.

**5. Running the Speed Test When Button is Clicked**
"""

def Check():
    Test()

"""**6. Reset Functionality**

*   This function calls **Test()** when the "Test Speed" button is clicked.
"""

def Reset():
    ping.config(text="--")
    upload.config(text="--")
    download.config(text="--")
    Download.config(text="--")
    service.config(text="- - -")
    ip.config(text="- - - - - - - -")

"""*  Resets all displayed values to default (--) when the reset button is clicked.

**7. Setting the Application Icon**
"""

image_icon = PhotoImage(file="./images/logo.png")
root.iconphoto(False, image_icon)

"""*   Loads and sets the application icon using an image file (logo.png).

**8. Adding UI Elements (Images and Buttons)**
"""

Top = PhotoImage(file="./images/background.png")
Label(root, image=Top, bg="#141527").place(x=0, y=0)

"""*   Loads and places a background image for the UI.

**Speed Test Button**
"""

Test_Image = PhotoImage(file="./images/button.png")
Test_Button = Button(
    root,
    image=Test_Image,
    bg="#141527",
    bd=0,
    activebackground="#141527",
    cursor="hand2",
    command=Check,
)
Test_Button.place(x=125, y=510)

"""*   Loads and places the "Test Speed" button with an image.

**Reset Button**
"""

Reset_Image = PhotoImage(file="./images/reset.png")
Reset_Button = Button(
    root,
    image=Reset_Image,
    bg="#141527",
    bd=0,
    activebackground="#141527",
    cursor="hand2",
    command=Reset,
)
Reset_Button.place(x=190, y=600)

"""*   Loads and places the "Reset" button with an image.

**9. Labels for Displaying Speed Test Results**
"""

ping = Label(root, text="--", font="arial 20", bg="#141527", fg="#e9b342")
ping.place(x=100, y=215, anchor="center")

download = Label(root, text="--", font="arial 20", bg="#141527", fg="#0cf107")
download.place(x=225, y=215, anchor="center")

upload = Label(root, text="--", font="arial 20", bg="#141527", fg="#e61c25")
upload.place(x=350, y=215, anchor="center")

Download = Label(root, text="--", font="arial 30", bg="#141527", fg="#00FFFF")
Download.place(x=225, y=430, anchor="center")

"""**Labels display: **

*   **Ping (ms):** Latency in milliseconds.
*   **Download Speed (Mbps):** Internet download speed.

*   **Upload Speed (Mbps):** Internet upload speed.
*   **Download Speed (Large font):** Highlighted separately.

**Displaying ISP and IP Address**
"""

service = Label(root, text="- - -", font="arial 12", bg="#141527", fg="white")
service.place(x=55, y=590, anchor="center")

ip = Label(root, text="- - - - - - - -", font="arial 12", bg="#141527", fg="white")
ip.place(x=380, y=590, anchor="center")

"""*   Displays the ISP (Internet Service Provider) and Public IP Address.

**10. Running the Application**
"""

root.mainloop()

"""*   Starts the Tkinter event loop, keeping the application running.

**Summary of Features**

âœ… Graphical User Interface (GUI) with Tkinter

âœ… Download, Upload Speed & Ping Measurement using speedtest-cli

âœ… Threading Implementation to prevent UI freezing

âœ… Reset Functionality to clear results

âœ… Internet Service Provider & IP Display

âœ… Custom Styling & Images for a Professional Look

This application is a lightweight and user-friendly Internet Speed Test tool that efficiently measures network performance. ðŸš€
"""